# Generated by Django 3.2.2 on 2021-05-17 13:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Acknowledgements',
            fields=[
                ('acknowledgementid', models.AutoField(db_column='AcknowledgementId', primary_key=True, serialize=False)),
                ('acknowledgementnumber', models.CharField(blank=True, db_column='AcknowledgementNumber', max_length=500, null=True, verbose_name='Acknowledgement Number')),
                ('applicationstageid', models.IntegerField(blank=True, db_column='ApplicationStageId', null=True, verbose_name='Application Stage')),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True, verbose_name='Remarks')),
                ('createdby', models.CharField(blank=True, db_column='CreatedBy', max_length=128, null=True)),
                ('createdon', models.DateTimeField(auto_now_add=True, db_column='CreatedOn')),
                ('modifiedby', models.CharField(blank=True, db_column='ModifiedBy', max_length=128, null=True)),
                ('modifiedon', models.DateTimeField(auto_now=True, db_column='ModifiedOn')),
                ('tag', models.CharField(blank=True, db_column='TagId', max_length=200, null=True, verbose_name='Tag')),
                ('studentreferenceno', models.CharField(blank=True, db_column='StudentReferenceNo', max_length=200, null=True, verbose_name='Student Reference No')),
            ],
            options={
                'verbose_name': 'Acknowledgement',
                'verbose_name_plural': 'Acknowledgements',
                'db_table': 'Acknowledgements',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Aspnetroles',
            fields=[
                ('id', models.CharField(db_column='Id', max_length=128, primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=256)),
            ],
            options={
                'verbose_name': 'User Role',
                'verbose_name_plural': 'User Roles',
                'db_table': 'AspNetRoles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Aspnetusers',
            fields=[
                ('id', models.CharField(db_column='Id', max_length=128, primary_key=True, serialize=False)),
                ('email', models.EmailField(db_column='Email', max_length=254, unique=True)),
                ('password', models.CharField(blank=True, db_column='PasswordHash', max_length=100, null=True)),
                ('first_name', models.CharField(blank=True, db_column='Name', max_length=100, null=True, verbose_name='Name')),
                ('last_name', models.CharField(blank=True, db_column='LastName', max_length=128, null=True, verbose_name='Last Name')),
                ('dateofbirth', models.DateField(blank=True, db_column='DateOfBirth', null=True, verbose_name='Date of Birth')),
                ('mobile', models.CharField(db_column='Mobile', max_length=50, verbose_name='Mobile')),
                ('address', models.CharField(blank=True, db_column='Address', max_length=100, null=True)),
                ('gender', models.IntegerField(choices=[(0, 'Female'), (1, 'Male')], db_column='Gender', default=1)),
                ('company', models.CharField(blank=True, db_column='Company', max_length=100, null=True)),
                ('countrycode', models.CharField(blank=True, db_column='CountryCode', max_length=10, null=True, verbose_name='Country Code')),
                ('assignedto', models.CharField(blank=True, help_text='ctrl+click for multiselect', max_length=500, null=True)),
                ('assignedcountries', models.CharField(blank=True, help_text='ctrl+click for multiselect', max_length=100, null=True)),
                ('country', models.IntegerField(blank=True, db_column='CountryId', null=True, verbose_name='Country')),
                ('state', models.IntegerField(db_column='State')),
                ('city', models.CharField(blank=True, db_column='City', max_length=30, null=True)),
                ('usertags', models.CharField(blank=True, db_column='UserTags', max_length=100, null=True)),
                ('usertaggroups', models.CharField(blank=True, db_column='UserTagGroups', max_length=100, null=True)),
                ('lockenddate', models.DateTimeField(blank=True, db_column='LockEndDate', null=True, verbose_name='Lock End Date')),
                ('lockenabled', models.BooleanField(blank=True, db_column='LockEnabled', default=False, null=True, verbose_name='Lock Enabled')),
                ('isconfirmemailsent', models.BooleanField(db_column='IsConfirmEmailSent', default=False, verbose_name='Confirm Email Sent')),
                ('createdby', models.CharField(blank=True, db_column='CreatedBy', max_length=128, null=True)),
                ('createdon', models.DateTimeField(auto_now_add=True, db_column='CreatedOn')),
                ('updatedon', models.DateTimeField(auto_now=True, db_column='UpdatedOn')),
                ('photo', models.CharField(blank=True, db_column='PhotoPath', max_length=255, null=True, verbose_name='Photo')),
                ('signalrconnid', models.CharField(blank=True, db_column='SignalRConnId', max_length=128, null=True, verbose_name='SignalR Conn Id')),
                ('parentuser', models.EmailField(blank=True, db_column='ParentUser', max_length=100, null=True, verbose_name='Parent User')),
                ('notificationemails', models.TextField(blank=True, db_column='NotificationEmails', null=True, verbose_name='Notification Emails')),
                ('receivenotifications', models.BooleanField(blank=True, db_column='ReceiveNotifications', null=True, verbose_name='Receive Notifications')),
                ('emailconfirmed', models.BooleanField(db_column='EmailConfirmed', default=False, verbose_name='Email Confirmed')),
                ('securitystamp', models.TextField(blank=True, db_column='SecurityStamp', null=True, verbose_name='Security Stamp')),
                ('phonenumber', models.CharField(blank=True, db_column='PhoneNumber', max_length=12, null=True, verbose_name='Phone Number')),
                ('phonenumberconfirmed', models.BooleanField(db_column='PhoneNumberConfirmed', default=False, verbose_name='Phone No Confirmed')),
                ('twofactorenabled', models.BooleanField(db_column='TwoFactorEnabled', default=False, verbose_name='Two Factor Enabled')),
                ('lockoutenddateutc', models.DateTimeField(blank=True, db_column='LockoutEndDateUtc', null=True, verbose_name='Lockout End Date UTC')),
                ('lockoutenabled', models.BooleanField(db_column='LockoutEnabled', default=False, verbose_name='Lockout Enabled')),
                ('accessfailedcount', models.IntegerField(db_column='AccessFailedCount', default=0, verbose_name='Access Failed Count')),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=256, null=True, unique=True, verbose_name='Username')),
                ('isshowcomssion', models.BooleanField(blank=True, db_column='isShowComssion', null=True, verbose_name='Show Commission')),
                ('last_login', models.DateTimeField(auto_now=True, db_column='LastLogin', null=True)),
                ('is_staff', models.BooleanField(db_column='IsStaff', default=False)),
                ('is_superuser', models.BooleanField(db_column='IsSuperUser', default=False, help_text='User has all permissions')),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'AspNetUsers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=2000, null=True)),
                ('university', models.CharField(blank=True, db_column='University', max_length=450, null=True)),
                ('countryid', models.IntegerField(db_column='CountryId')),
                ('universityid', models.IntegerField(db_column='UniversityId')),
                ('studylevelid', models.IntegerField(db_column='StudyLevelId')),
                ('categoryid', models.TextField(blank=True, db_column='CategoryId', null=True)),
                ('subcategoryid', models.TextField(blank=True, db_column='SubCategoryId', null=True)),
                ('campus', models.TextField(blank=True, db_column='Campus', null=True)),
                ('createdon', models.DateTimeField(db_column='CreatedOn')),
                ('createdby', models.CharField(blank=True, db_column='CreatedBy', max_length=128, null=True)),
                ('modifiedon', models.DateTimeField(db_column='ModifiedOn')),
                ('modifiedby', models.CharField(blank=True, db_column='ModifiedBy', max_length=128, null=True)),
                ('isactive', models.BooleanField(db_column='IsActive')),
                ('isdeleted', models.BooleanField(db_column='IsDeleted')),
                ('displayorder', models.IntegerField(db_column='DisplayOrder')),
                ('concentration', models.TextField(blank=True, db_column='Concentration', null=True)),
                ('commissionmode', models.CharField(blank=True, db_column='CommissionMode', max_length=1, null=True)),
                ('commissionvalue', models.DecimalField(blank=True, db_column='CommissionValue', decimal_places=2, max_digits=18, null=True)),
                ('backlog', models.IntegerField(blank=True, null=True)),
                ('coursedetail', models.IntegerField(blank=True, db_column='CourseDetail_Id', null=True)),
                ('isonlinecourse', models.BooleanField(blank=True, db_column='IsOnlineCourse', null=True)),
            ],
            options={
                'db_table': 'Courses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('studentid', models.BigAutoField(db_column='StudentId', primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=100, null=True)),
                ('firstname', models.CharField(db_column='FirstName', max_length=500)),
                ('middlename', models.CharField(blank=True, db_column='MiddleName', max_length=500, null=True)),
                ('lastname', models.CharField(blank=True, db_column='LastName', max_length=500, null=True)),
                ('photopath', models.CharField(blank=True, db_column='PhotoPath', max_length=4000, null=True)),
                ('email', models.CharField(db_column='Email', max_length=500)),
                ('dob', models.DateTimeField(db_column='DOB')),
                ('gender', models.CharField(blank=True, db_column='Gender', max_length=15, null=True)),
                ('phoneno', models.CharField(blank=True, db_column='PhoneNo', max_length=50, null=True)),
                ('mobileno', models.CharField(db_column='MobileNo', max_length=50)),
                ('maritalstatus', models.CharField(blank=True, db_column='MaritalStatus', max_length=20, null=True)),
                ('addressline1', models.CharField(db_column='AddressLine1', max_length=1000)),
                ('addressline2', models.CharField(blank=True, db_column='AddressLine2', max_length=1000, null=True)),
                ('city', models.CharField(db_column='City', max_length=500)),
                ('state', models.CharField(db_column='State', max_length=500)),
                ('countryid', models.IntegerField(db_column='CountryId')),
                ('postalcode', models.CharField(blank=True, db_column='PostalCode', max_length=50, null=True)),
                ('createdby', models.CharField(blank=True, db_column='CreatedBy', max_length=128, null=True)),
                ('createdon', models.DateTimeField(blank=True, db_column='CreatedOn', null=True)),
                ('modifiedby', models.CharField(blank=True, db_column='ModifiedBy', max_length=128, null=True)),
                ('modifiedon', models.DateTimeField(blank=True, db_column='ModifiedOn', null=True)),
                ('partnersstudentid', models.IntegerField(blank=True, db_column='PartnersStudentId', null=True)),
                ('staffid', models.TextField(blank=True, db_column='StaffId', null=True)),
                ('countrieschosen', models.CharField(blank=True, db_column='CountriesChosen', max_length=100, null=True)),
                ('studycountryid', models.IntegerField(blank=True, db_column='StudyCountryId', null=True)),
                ('higheststudylevelid', models.IntegerField(blank=True, db_column='HighestStudyLevelId', null=True)),
                ('studylevelidpassed', models.CharField(blank=True, db_column='StudyLevelIdPassed', max_length=100, null=True)),
            ],
            options={
                'db_table': 'Students',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Universities',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('docid', models.TextField(blank=True, db_column='DocId', null=True)),
                ('name', models.TextField(blank=True, db_column='Name', null=True)),
                ('country', models.IntegerField(db_column='Country')),
                ('createdon', models.DateTimeField(db_column='CreatedOn')),
                ('createdby', models.CharField(blank=True, db_column='CreatedBy', max_length=128, null=True)),
                ('modifiedon', models.DateTimeField(db_column='ModifiedOn')),
                ('modifiedby', models.CharField(blank=True, db_column='ModifiedBy', max_length=128, null=True)),
                ('isactive', models.BooleanField(db_column='IsActive')),
                ('isdeleted', models.BooleanField(db_column='IsDeleted')),
                ('tieup', models.BooleanField(db_column='TieUp')),
                ('displayorder', models.IntegerField(db_column='DisplayOrder')),
                ('backlogrange', models.TextField(blank=True, db_column='BacklogRange', null=True)),
                ('currency', models.TextField(blank=True, db_column='Currency', null=True)),
                ('webomatricsworldranking', models.IntegerField(blank=True, db_column='WebomatricsWorldRanking', null=True)),
                ('webomatricsnationalranking', models.IntegerField(blank=True, db_column='WebomatricsNationalRanking', null=True)),
                ('isindirect', models.BooleanField(db_column='IsIndirect')),
                ('ranking', models.IntegerField(blank=True, db_column='Ranking', null=True)),
                ('rankingfrom', models.TextField(blank=True, db_column='RankingFrom', null=True)),
                ('applicationmode', models.TextField(blank=True, db_column='ApplicationMode', null=True)),
                ('commissionmode', models.CharField(blank=True, db_column='CommissionMode', max_length=1, null=True)),
                ('commissionvalue', models.DecimalField(blank=True, db_column='CommissionValue', decimal_places=2, max_digits=18, null=True)),
                ('extension', models.TextField(blank=True, db_column='Extension', null=True)),
                ('acceptedcurrencycode', models.TextField(blank=True, db_column='AcceptedCurrencyCode', null=True)),
                ('universitydetail', models.IntegerField(blank=True, db_column='UniversityDetail_Id', null=True)),
                ('bankdetails', models.TextField(blank=True, db_column='Bankdetails', null=True)),
                ('applicationfeemarkupvalue', models.DecimalField(blank=True, db_column='ApplicationFeeMarkupValue', decimal_places=2, max_digits=18, null=True)),
            ],
            options={
                'db_table': 'Universities',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Aspnetuserroles',
            fields=[
                ('userid', models.ForeignKey(db_column='UserId', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='Auth_user_role', serialize=False, to='core.aspnetusers', verbose_name='User')),
            ],
            options={
                'verbose_name': 'Userrole',
                'verbose_name_plural': 'Userroles',
                'db_table': 'AspNetUserRoles',
                'managed': False,
            },
        ),
    ]
